## Problem Set 4 

1. Create three tables: Customers, Orders, and OrderItems.
Answer:
CREATE SCHEMA IF NOT EXISTS `unemath_Lutes` DEFAULT CHARACTER SET utf8 ;
USE `unemath_Lutes` ;

-- -----------------------------------------------------
-- Table `unemath_Lutes`.`Customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `unemath_Lutes`.`Customers` (
  `customer_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `address1` VARCHAR(45) NOT NULL,
  `address2` VARCHAR(45) NULL,
  `customer_zipcode` VARCHAR(5) NULL,
  PRIMARY KEY (`customer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `unemath_Lutes`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `unemath_Lutes`.`Orders` (
  `customer_id` INT NOT NULL,
  `order_number` INT NOT NULL,
  `purchase_date` VARCHAR(45) NULL,
  `total` DECIMAL(2) NOT NULL,
  INDEX `customer_id_idx` (`customer_id` ASC),
  CONSTRAINT `customer_id`
    FOREIGN KEY (`customer_id`)
    REFERENCES `unemath_Lutes`.`Customers` (`customer_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `unemath_Lutes`.`Manufacturer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `unemath_Lutes`.`Manufacturer` (
  `Man_id` INT NOT NULL,
  `Man_details` VARCHAR(45) NULL,
  PRIMARY KEY (`Man_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `unemath_Lutes`.`Categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `unemath_Lutes`.`Categories` (
  `cat_id` INT NOT NULL,
  `cat_details` VARCHAR(45) NULL,
  PRIMARY KEY (`cat_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `unemath_Lutes`.`Products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `unemath_Lutes`.`Products` (
  `product_id` INT NOT NULL,
  `product_details` VARCHAR(45) NULL,
  `man_id` INT NOT NULL,
  `cat_id` INT NOT NULL,
  PRIMARY KEY (`product_id`),
  INDEX `cat_id_idx` (`cat_id` ASC),
  INDEX `man_id_idx` (`man_id` ASC),
  CONSTRAINT `man_id`
    FOREIGN KEY (`man_id`)
    REFERENCES `unemath_Lutes`.`Manufacturer` (`Man_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `cat_id`
    FOREIGN KEY (`cat_id`)
    REFERENCES `unemath_Lutes`.`Categories` (`cat_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `unemath_Lutes`.`OrderItems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `unemath_Lutes`.`OrderItems` (
  `item_description` VARCHAR(45) NULL,
  `item_cost` DECIMAL(2) NULL,
  `item_title` VARCHAR(45) NULL,
  `product_id` INT NULL,
  `quantity` INT NULL,
  `order_number` INT NOT NULL,
  `order_id` INT NOT NULL,
  INDEX `product_id_idx` (`product_id` ASC),
  PRIMARY KEY (`order_number`),
  INDEX `order_id_idx` (`order_id` ASC),
  CONSTRAINT `product_id`
    FOREIGN KEY (`product_id`)
    REFERENCES `unemath_Lutes`.`Products` (`product_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `order_id`
    FOREIGN KEY (`order_id`)
    REFERENCES `unemath_Lutes`.`Orders` (`customer_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

2. Why do we need an OrderItems table?
Answer: 
An OrderItems table 

3. Create linked tables in MS Access.
Answer: 
N/A
4. Create forms to enter customer data.
Answer: 
N/A
5. Create a form with a subform to enter orders and order item.
Answer: 
N/A
6. Use forms created in 4 and 5 to insert Customers and Orders.  Add customers that have not made any orders. Make the number of entries relatively small.  Why?  
Answer: 
N/A
7. Use SQL DML to INSERT records into Customers and Orders (and OrderItems).  
Answer:

INSERT INTO unemath_Lutes.Customers
(customer_id, first_name, last name, address1, address2,customer_zipcode)
VALUES 
('1234','Jen','Lutes','11 Hills Beach Rd','PO Box 1','04005'),
('1235','Angel','Waters','11 Hills Beach Rd','PO Box 2','04005'),
('1236','Emily','Murad','11 Hills Beach Rd','PO Box 3','04005'),
('1237','Leah','Soloway','11 Hills Beach Rd','PO Box 4','04005'),
('1238','Heather','Baron','11 Hills Beach Rd','PO Box 5','04005');

INSERT INTO unemath_Lutes.Orders
(customer_id, order_number, purchase_date, total)
VALUES 
();

INSERT INTO unemath_Lutes.OrderItems
(item_description, item_cost, item_title, product_id,quantity, quantity,order_number,order_id)
VALUES 
();

INSERT INTO unemath_Lutes.Categories
(cat_id, cat_details)
VALUES 
('10','mickeymouse'),
('11','minnymouse'),
('12','donaldduck'),
('13','goofy');


INSERT INTO unemath_Lutes.Manufacturers
(Man_id, Man_details)
VALUES 
('10','disney'),
('11','pixar'),
('12','teennick'),
('13','nickelodeon');

INSERT INTO unemath_Lutes.Products
(product_id, product_details, man_id, cat_id)
VALUES 
();
8. Find all customer orders.

9. Select all customers that orders a certain product (This will depend on what data you entered into the table).  Find all customers that ordered product 3452.  

10. List 5 questions that you can answer from this data.
